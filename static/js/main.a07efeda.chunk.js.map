{"version":3,"sources":["lib/index.js","lib/Folders.js","index.js"],"names":["Folders","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","folders","_this2","folderW","width","folderHString","heightString","tabW","length","styles","tabs","backgroundColor","tab","folder","i","color","right","zIndex","tabPanel","height","overflow","className","react_default","a","createElement","esm","style","map","key","name","component","PureComponent","App","fluidsFolders","Fragment","panelLabel","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"qQACeA,2BCKX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,QAAUP,EAAKD,MAAMQ,QAFXP,wEAKV,IAAAQ,EAAAL,KACDM,EAAUN,KAAKJ,MAAMW,MACrBC,EAAgBR,KAAKJ,MAAMa,aACzBC,GAAQJ,EAA4C,IAAjCN,KAAKJ,MAAMQ,QAAQO,OAAS,IAAWX,KAAKJ,MAAMQ,QAAQO,OAC7EC,EAAS,CACXC,KAAM,CAAEC,gBAAiB,iBACzBC,IAAK,SAACC,EAAQC,GACV,MAAQ,CACJH,gBAAiBE,EAAOF,gBACxBI,MAAO,QACPX,MAAOG,EACPS,MAAW,GAAJF,EAAS,KAChBG,OAAQ,GAAKH,EAAI,IAGzBI,SAAU,SAACL,GACP,MAAQ,CACJF,gBAAiBE,EAAOF,gBACxBQ,OAAQd,EACRe,SAAmC,gBAAzBlB,EAAKT,MAAM4B,UAA8B,OAAS,YAKxE,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,UAAWxB,KAAKJ,MAAM4B,UAAWK,MAAOjB,EAAOC,MACjDY,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACK5B,KAAKI,QAAQ0B,IAAI,SAACd,EAAQC,GACvB,OACIQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIG,IAAKf,EAAOgB,KACZH,MAAOjB,EAAOG,IAAIC,EAAQC,GAC1BO,UAAU,iBAHd,IAGgCR,EAAOgB,SAKlDhC,KAAKI,QAAQ0B,IAAI,SAACd,GACf,OACIS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIG,IAAKf,EAAOgB,KACZH,MAAOjB,EAAOS,SAASL,IACtBA,EAAOiB,qBAhDdC,kBCAhBC,cACF,SAAAA,EAAYvC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,GAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KACVJ,0EAIN,IAAMwC,EAAgB,CAClB,CACIJ,KAAM,OACNlB,gBAAiB,UACjBmB,UACIR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACIZ,EAAAC,EAAAC,cAAA,OAAKH,UAAU,gCACXC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAMH,UAAU,YAAhB,KACAC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,cAAhB,kBAIhBc,WAAY,aAEhB,CACIN,KAAM,YACNlB,gBAAiB,UACjBmB,UACIR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACIZ,EAAAC,EAAAC,cAAA,MAAIH,UAAU,YACVC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,YAAhB,KACAC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,cAAhB,eAGZc,WAAY,MAEhB,CACIN,KAAM,QACNlB,gBAAiB,UACjBmB,UAAWR,EAAAC,EAAAC,cAAA,qBACXW,WAAY,OAGpB,OACIb,EAAAC,EAAAC,cAACY,EAAD,CACIhC,MAAOP,KAAKJ,MAAMW,MAClBE,aAAcT,KAAKJ,MAAMa,aACzBe,UAAU,gBACVpB,QAASgC,WA7CPI,aAkDlBC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a07efeda.chunk.js","sourcesContent":["import Folders from \"./Folders\";\nexport default Folders;","import React, { PureComponent } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport \"./Folders.css\"\n\nclass Folders extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.folders = this.props.folders\n    }\n\n    render() {\n        let folderW = this.props.width\n        let folderHString = this.props.heightString\n        const tabW = (folderW + (this.props.folders.length - 1) * 10) / this.props.folders.length\n        const styles = {\n            tabs: { backgroundColor: \"rgba(0,0,0,0)\" },\n            tab: (folder, i) => {\n                return ({\n                    backgroundColor: folder.backgroundColor,\n                    color: \"white\",\n                    width: tabW,\n                    right: i * 10 + \"px\",\n                    zIndex: 10 - i - 1\n                })\n            },\n            tabPanel: (folder) => {\n                return ({\n                    backgroundColor: folder.backgroundColor,\n                    height: folderHString,\n                    overflow: this.props.className === \"xray-folder\" ? \"auto\" : \"hidden\"\n                })\n            }\n        }\n\n        return (\n            <Tabs className={this.props.className} style={styles.tabs}>\n                <TabList>\n                    {this.folders.map((folder, i) => {\n                        return (\n                            <Tab\n                                key={folder.name}\n                                style={styles.tab(folder, i)}\n                                className=\"side-tab tab1\"> {folder.name}\n                            </Tab>\n                        )\n                    })}\n                </TabList>\n                {this.folders.map((folder) => {\n                    return (\n                        <TabPanel\n                            key={folder.name}\n                            style={styles.tabPanel(folder)}>\n                            {folder.component}\n                        </TabPanel>\n                    )\n                })}\n            </Tabs>\n        );\n    }\n}\n\nexport default Folders;\n","import React, {Component, Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Folders from \"./lib\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const fluidsFolders = [\n            {\n                name: \"COAG\",\n                backgroundColor: \"#fff5e8\",\n                component:\n                    <>\n                        <div className=\"fluids-table-label-container\">\n                            <h3>\n                                <span className=\"c-circle\">C</span>\n                                <span className=\"coag-label\">Coagulation</span>\n                            </h3>\n                        </div>\n                    </>,\n                panelLabel: \"Nutrition\"\n            },\n            {\n                name: \"NUTRITION\",\n                backgroundColor: \"#b1cbf1\",\n                component:\n                    <>\n                        <h3 className=\"nu-label\">\n                            <span className=\"n-circle\">N</span>\n                            <span className=\"coag-label\">Nutrition</span>\n                        </h3>\n                    </>,\n                panelLabel: \"NO\"\n            },\n            {\n                name: \"RENAL\",\n                backgroundColor: \"#e6bb14\",\n                component: <h2> EMPTY </h2>,\n                panelLabel: \"NO\"\n            },\n        ]\n        return (\n            <Folders\n                width={this.props.width}\n                heightString={this.props.heightString}\n                className=\"fluids-folder\"\n                folders={fluidsFolders} />\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}