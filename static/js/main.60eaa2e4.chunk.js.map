{"version":3,"sources":["lib/index.js","lib/Folders.js","index.js"],"names":["Folders","props","folders","folderW","this","width","folderHString","heightString","tabW","length","styles","tabs","backgroundColor","tab","folder","i","color","right","zIndex","tabPanel","height","overflow","className","style","component","map","key","name","PureComponent","App","handleSubmit","e","preventDefault","value","setState","Number","state","fluidsFolders","panelLabel","onSubmit","placeholder","type","ref","element","Component","ReactDOM","render","document","getElementById"],"mappings":"iSACeA,G,wBCKb,WAAaC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,QAAU,EAAKD,MAAMC,QAFR,E,sEAKT,IAAD,OACJC,EAAUC,KAAKH,MAAMI,MACrBC,EAAgBF,KAAKH,MAAMM,aACzBC,GACHL,EAA4C,IAAjCC,KAAKH,MAAMC,QAAQO,OAAS,IACxCL,KAAKH,MAAMC,QAAQO,OACfC,EAAS,CACbC,KAAM,CAAEC,gBAAiB,iBACzBC,IAAK,SAACC,EAAQC,GACZ,MAAO,CACLH,gBAAiBE,EAAOF,gBACxBI,MAAO,QACPX,MAAOG,EACPS,MAAW,GAAJF,EAAS,KAChBG,OAAQ,GAAKH,EAAI,IAGrBI,SAAU,SAAAL,GACR,MAAO,CACLF,gBAAiBE,EAAOF,gBACxBQ,OAAQd,EACRe,SAAmC,gBAAzB,EAAKpB,MAAMqB,UAA8B,OAAS,YAKlE,OAA4B,IAAxBlB,KAAKF,QAAQO,OAEb,yBACEa,UAAWlB,KAAKH,MAAMqB,UACtBC,MAAOb,EAAOS,SAASf,KAAKF,QAAQ,KAEnCE,KAAKF,QAAQ,GAAGsB,WAMrB,kBAAC,IAAD,CAAMF,UAAWlB,KAAKH,MAAMqB,UAAWC,MAAOb,EAAOC,MACnD,kBAAC,IAAD,KACGP,KAAKF,QAAQuB,KAAI,SAACX,EAAQC,GACzB,OACE,kBAAC,IAAD,CACEW,IAAKZ,EAAOa,KACZJ,MAAOb,EAAOG,IAAIC,EAAQC,GAC1BO,UAAU,iBAET,IACAR,EAAOa,UAKfvB,KAAKF,QAAQuB,KAAI,SAAAX,GAChB,OACE,kBAAC,IAAD,CAAUY,IAAKZ,EAAOa,KAAMJ,MAAOb,EAAOS,SAASL,IAChDA,EAAOU,mB,GA9DAI,kBCAhBC,E,YACJ,WAAa5B,GAAQ,IAAD,8BAClB,4CAAMA,KAIR6B,aAAe,SAAAC,GACTA,GAAGA,EAAEC,iBACT,IAAM3B,EAAQ,EAAKA,MAAM4B,MACrBb,EAAS,EAAKA,OAAOa,MACzB,EAAKC,SAAS,CACZ7B,MAAO8B,OAAO9B,GACde,OAAQe,OAAOf,MATjB,EAAKgB,MAAQ,CAAE/B,MAAO,IAAKe,OAAQ,KAFjB,E,sEAgDT,IAAD,OACFiB,EAAgB,CACpB,CACEV,KAAM,OACNf,gBAAiB,UACjBY,UACE,oCACE,yBAAKF,UAAU,gCACb,4BACE,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,cAAhB,kBAKRgB,WAAY,cAGhB,OACE,oCACE,0BAAMC,SAAUnC,KAAK0B,cACnB,2BACEU,YAAY,QACZC,KAAK,OACLC,IAAK,SAAAC,GACH,EAAKtC,MAAQsC,KAGjB,2BACEH,YAAY,SACZC,KAAK,OACLC,IAAK,SAAAC,GACH,EAAKvB,OAASuB,KAGlB,4CAEF,yBACErB,UAAU,OACVC,MAAO,CACLlB,MAAOD,KAAKgC,MAAM/B,MAAQ,KAC1Be,OAAQhB,KAAKgC,MAAMhB,OAAS,OAG9B,kBAAC,EAAD,CACEf,MAAOD,KAAKgC,MAAM/B,MAClBE,aAAcH,KAAKgC,MAAMhB,OAAS,KAClCE,UAAU,gBACVpB,QAASmC,U,GAjGHO,aAyGlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.60eaa2e4.chunk.js","sourcesContent":["import Folders from \"./Folders\";\nexport default Folders;","import React, { PureComponent } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport 'react-tabs/style/react-tabs.css'\nimport './Folders.css'\n\nclass Folders extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.folders = this.props.folders\n  }\n\n  render () {\n    let folderW = this.props.width\n    let folderHString = this.props.heightString\n    const tabW =\n      (folderW + (this.props.folders.length - 1) * 10) /\n      this.props.folders.length\n    const styles = {\n      tabs: { backgroundColor: 'rgba(0,0,0,0)' },\n      tab: (folder, i) => {\n        return {\n          backgroundColor: folder.backgroundColor,\n          color: 'white',\n          width: tabW,\n          right: i * 10 + 'px',\n          zIndex: 10 - i - 1\n        }\n      },\n      tabPanel: folder => {\n        return {\n          backgroundColor: folder.backgroundColor,\n          height: folderHString,\n          overflow: this.props.className === 'xray-folder' ? 'auto' : 'hidden'\n        }\n      }\n    }\n\n    if (this.folders.length === 1) {\n      return (\n        <div\n          className={this.props.className}\n          style={styles.tabPanel(this.folders[0])}\n        >\n          {this.folders[0].component}\n        </div>\n      )\n    }\n\n    return (\n      <Tabs className={this.props.className} style={styles.tabs}>\n        <TabList>\n          {this.folders.map((folder, i) => {\n            return (\n              <Tab\n                key={folder.name}\n                style={styles.tab(folder, i)}\n                className='side-tab tab1'\n              >\n                {' '}\n                {folder.name}\n              </Tab>\n            )\n          })}\n        </TabList>\n        {this.folders.map(folder => {\n          return (\n            <TabPanel key={folder.name} style={styles.tabPanel(folder)}>\n              {folder.component}\n            </TabPanel>\n          )\n        })}\n      </Tabs>\n    )\n  }\n}\n\nexport default Folders\n","import React, { Component, Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Folders from './lib'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { width: 300, height: 400 }\n  }\n\n  handleSubmit = e => {\n    if (e) e.preventDefault()\n    const width = this.width.value\n    let height = this.height.value\n    this.setState({\n      width: Number(width),\n      height: Number(height)\n    })\n  }\n  //    [\n  //         {\n  //             name: \"COAG\",\n  //             backgroundColor: \"#fff5e8\",\n  //             component:\n  //                 <>\n  //                     <div className=\"fluids-table-label-container\">\n  //                         <h3>\n  //                             <span className=\"c-circle\">C</span>\n  //                             <span className=\"coag-label\">Coagulation</span>\n  //                         </h3>\n  //                     </div>\n  //                 </>,\n  //             panelLabel: \"Nutrition\"\n  //         },\n  //         {\n  //             name: \"NUTRITION\",\n  //             backgroundColor: \"#b1cbf1\",\n  //             component:\n  //                 <>\n  //                     <h3 className=\"nu-label\">\n  //                         <span className=\"n-circle\">N</span>\n  //                         <span className=\"coag-label\">Nutrition</span>\n  //                     </h3>\n  //                 </>,\n  //             panelLabel: \"NO\"\n  //         },\n  //         {\n  //             name: \"RENAL\",\n  //             backgroundColor: \"#e6bb14\",\n  //             component: <h2> EMPTY </h2>,\n  //             panelLabel: \"NO\"\n  //         },\n  //     ]\n  render () {\n    const fluidsFolders = [\n      {\n        name: 'COAG',\n        backgroundColor: '#fff5e8',\n        component: (\n          <>\n            <div className='fluids-table-label-container'>\n              <h3>\n                <span className='c-circle'>C</span>\n                <span className='coag-label'>Coagulation</span>\n              </h3>\n            </div>\n          </>\n        ),\n        panelLabel: 'Nutrition'\n      }\n    ]\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder='width'\n            type='text'\n            ref={element => {\n              this.width = element\n            }}\n          />\n          <input\n            placeholder='height'\n            type='text'\n            ref={element => {\n              this.height = element\n            }}\n          />\n          <button>Submit!</button>\n        </form>\n        <div\n          className='wrap'\n          style={{\n            width: this.state.width + 'px',\n            height: this.state.height + 'px'\n          }}\n        >\n          <Folders\n            width={this.state.width}\n            heightString={this.state.height + 'px'}\n            className='fluids-folder'\n            folders={fluidsFolders}\n          />\n        </div>\n      </>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}